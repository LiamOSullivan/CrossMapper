package crossMapper_V0_1;

//import java.awt.*;
import java.awt.event.ActionEvent;
//import java.awt.event.MouseListener;
import javax.swing.*;
/*
 * MapperFrame.java
 * 
 * This is the top level Frame for the Mapper application.
 * It draws the GUI menu elements.
 * 
 * Created on 03-Jan-2011, 15:43:09
 */



/**
 *
 * @author lmosulli
 */
public class CrossMapper_V0_1_GUI extends JFrame {

	/** Creates new form MapperFrame */
	public CrossMapper_V0_1_GUI() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		
		jMenuBar1 = new javax.swing.JMenuBar();
		fileMenu = new javax.swing.JMenu();
		jMenuItem2 = new javax.swing.JMenuItem();
		jMenuItem1 = new javax.swing.JMenuItem();
		jMenuItem3 = new javax.swing.JMenuItem();
		jMenuItem4 = new javax.swing.JMenuItem();
		jMenuItem5 = new javax.swing.JMenuItem();
		editMenu = new javax.swing.JMenu();
		addInputNodeMenuItem = new javax.swing.JMenuItem();
		removeInputNodeMenuItem = new javax.swing.JMenuItem();
		addOutputNodeMenuItem = new javax.swing.JMenuItem();
		removeOutputNodeMenuItem = new javax.swing.JMenuItem();
		jMenuItem15 = new javax.swing.JMenuItem();
		settingsMenu = new javax.swing.JMenu();
		generalSettings = new javax.swing.JMenuItem();
		oscSettings = new javax.swing.JMenuItem();
		midiSettins = new javax.swing.JMenuItem();
		serialSettings = new javax.swing.JMenuItem();
		aboutMenu = new javax.swing.JMenu();
		jMenuItem14 = new javax.swing.JMenuItem();

		//J Frame attributes
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("CrossMapper Alpha 0.12");
		//setBackground(new java.awt.Color(255, 255, 255));
		//setBounds(new java.awt.Rectangle(0, 0, 800, 600));
		//setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
		setJMenuBar(jMenuBar1);
		//setVisible(true); //Causes bug: menus get lost behind PApplet
		
		// File menu
		fileMenu.setBackground(new java.awt.Color(255, 255, 255));
		fileMenu.setText("File");
		jMenuItem2.setText("New Preset");
		fileMenu.add(jMenuItem2);
		jMenuItem1.setText("Open Preset");
		fileMenu.add(jMenuItem1);
		jMenuItem3.setText("Save Preset");
		fileMenu.add(jMenuItem3);
		jMenuItem4.setText("*");
		fileMenu.add(jMenuItem4);
		jMenuItem5.setText("Exit");
		fileMenu.add(jMenuItem5);
		jMenuBar1.add(fileMenu);
		//Edit menu
		editMenu.setText("Edit");
		addInputNodeMenuItem.setText("Add Input Node");
		editMenu.add(addInputNodeMenuItem);
		addInputNodeMenuItem.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addInputNodeActionPerformed(evt);
			}
		});
		removeInputNodeMenuItem.setText("Remove Input Node");
		editMenu.add(removeInputNodeMenuItem);
		removeInputNodeMenuItem.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				removeInputNodeActionPerformed(evt);
			}
		});
		addOutputNodeMenuItem.setText("Add Output Node");
		editMenu.add(addOutputNodeMenuItem);
		addOutputNodeMenuItem.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addOutputNodeActionPerformed(evt);
			}
		});
		removeOutputNodeMenuItem.setText("Remove Output Node");
		editMenu.add(removeOutputNodeMenuItem);
		removeOutputNodeMenuItem.addActionListener(new java.awt.event.ActionListener(){
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				removeOutputNodeActionPerformed(evt);
			}
		});
		jMenuItem15.setText("Clear All Nodes");
		editMenu.add(jMenuItem15);
		jMenuBar1.add(editMenu);
		//Settings menu
		settingsMenu.setText("Settings");
		
		generalSettings.setText("General");
		generalSettings.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				generalSettingsActionPerformed(evt);
			}
		});
		settingsMenu.add(generalSettings);

		oscSettings.setText("Open Sound Control");
		oscSettings.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				oscSettingsActionPerformed(evt);
			}
		});
		settingsMenu.add(oscSettings);

		midiSettins.setText("MIDI ");
		settingsMenu.add(midiSettins);

		serialSettings.setText("Serial Communications");
		serialSettings.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				serialSettingsActionPerformed(evt);
			}
		});
		settingsMenu.add(serialSettings);

		jMenuBar1.add(settingsMenu);
		//About menu
		aboutMenu.setText("About");
		jMenuItem14.setText("About CrossMapper");
		aboutMenu.add(jMenuItem14);
		jMenuBar1.add(aboutMenu);

		setJMenuBar(jMenuBar1);
		
		//////////////////////////////////////////////////////////////////////////////////////       
		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 800, Short.MAX_VALUE)
		);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 574, Short.MAX_VALUE)
		);

		pack();
	}// </editor-fold>
	
	// Action Performed methods//////////////////////////////////////////////////////////////////////////////////////
	protected void addInputNodeActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		System.out.println("Input node added!");
		CrossMapper_V0_1.addInput();
	}
	protected void removeInputNodeActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		System.out.println("Input node removed!");
		CrossMapper_V0_1.removeInput();
	}
	protected void addOutputNodeActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		System.out.println("Output node added!");
		CrossMapper_V0_1.addOutput();
	}
	protected void removeOutputNodeActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		System.out.println("Output node removed!");
		CrossMapper_V0_1.removeOutput();
	}

	private void generalSettingsActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		GeneralSettings mymyGeneralSettings = new GeneralSettings(this, true);
		//GeneralSettings.setVisible(true);
	}

	private void oscSettingsActionPerformed(java.awt.event.ActionEvent evt) {
		OscSettingsMenu myOSCSettings = new OscSettingsMenu(); //create a new frame for OSC Settings
		myOSCSettings.setVisible(true);
	}
	private void serialSettingsActionPerformed(java.awt.event.ActionEvent evt) {
		SerialSettingsMenu mySerialSettings = new SerialSettingsMenu(); //create a new frame for OSC Settings
		mySerialSettings.setVisible(true);
	}
	
	


	// Variables declaration ///////////////////////////////////////////////////////////////////////
	private javax.swing.JMenu aboutMenu;
	private javax.swing.JMenu editMenu;
	private javax.swing.JMenu fileMenu;
	private javax.swing.JMenuItem generalSettings;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JMenuItem jMenuItem1;
	private javax.swing.JMenuItem jMenuItem14;
	private javax.swing.JMenuItem jMenuItem15;
	private javax.swing.JMenuItem jMenuItem2;
	private javax.swing.JMenuItem jMenuItem3;
	private javax.swing.JMenuItem jMenuItem4;
	private javax.swing.JMenuItem jMenuItem5;
	private javax.swing.JMenuItem addInputNodeMenuItem;
	private javax.swing.JMenuItem removeInputNodeMenuItem;
	private javax.swing.JMenuItem addOutputNodeMenuItem;
	private javax.swing.JMenuItem removeOutputNodeMenuItem;
	private javax.swing.JMenuItem midiSettins;
	private javax.swing.JMenuItem oscSettings;
	private javax.swing.JMenuItem serialSettings;
	private javax.swing.JMenu settingsMenu;
	private JMenuItem popupMenuItem;
	private JPopupMenu popupMenu ;
	private JTextArea output;
	private JScrollPane scrollPane;
	// End of variables declaration

}
